/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package parsers;

import usersettings.SettingsLoader;
import java.awt.Cursor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.jdesktop.application.Action;
import parsers.utilities.ElevationLoaderMapQuest;

/**
 * Trieda s grafickými a funkcionálnimy prvkami modulu KML Parser
 * @author Matej Pazdič
 */
public class KmlParser extends javax.swing.JFrame {

    private File destFolder;
    private File kmlFile;
    private String path = null;
    private String os = System.getProperty("os.name");
    private static ArrayList<String> latitude = new ArrayList<String>();
    private static ArrayList<String> longitude = new ArrayList<String>();
    private static ArrayList<String> deviceElevation = new ArrayList<String>();
    private static ArrayList<String> serverElevation = null;
    private ElevationLoaderMapQuest elevationLoader = new ElevationLoaderMapQuest();
    private Thread thread1 = new Thread(new getElevationsFromURL());
    private boolean isLoadedElevationsFromServer = false;
    private String trackType;

    /**
     * Konstruktor triedy KMLParser
     */
    public KmlParser() {
        initComponents();

        jProgressBar1.setVisible(false);
        jLabel6.setVisible(false);

        jButton2.setEnabled(false);
        jTextField2.setEnabled(false);
        jButton4.setEnabled(false);
        jToggleButton1.setEnabled(false);
        jToggleButton2.setEnabled(false);
        jToggleButton3.setEnabled(false);
        jToggleButton4.setEnabled(false);
        jToggleButton5.setEnabled(false);
        jToggleButton6.setEnabled(false);
        jToggleButton7.setEnabled(false);
        jToggleButton8.setEnabled(false);
        jToggleButton9.setEnabled(false);
        jToggleButton10.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton10 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jSeparator4 = new javax.swing.JSeparator();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mapps.MAPPSApp.class).getContext().getResourceMap(KmlParser.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jTextField1.setEditable(false);
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mapps.MAPPSApp.class).getContext().getActionMap(KmlParser.class, this);
        jButton1.setAction(actionMap.get("openFile")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jTextField2.setEditable(false);
        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setEnabled(false);
        jTextField2.setName("jTextField2"); // NOI18N

        jButton2.setAction(actionMap.get("selectDest")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jButton3.setAction(actionMap.get("Cancel")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        jButton4.setAction(actionMap.get("parseKml")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        jSeparator3.setName("jSeparator3"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jProgressBar1.setToolTipText(resourceMap.getString("jProgressBar1.toolTipText")); // NOI18N
        jProgressBar1.setDoubleBuffered(true);
        jProgressBar1.setName("jProgressBar1"); // NOI18N
        jProgressBar1.setStringPainted(true);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jToggleButton1.setAction(actionMap.get("selectModeWalk")); // NOI18N
        buttonGroup1.add(jToggleButton1);
        jToggleButton1.setIcon(resourceMap.getIcon("jToggleButton1.icon")); // NOI18N
        jToggleButton1.setName("jToggleButton1"); // NOI18N

        jToggleButton2.setAction(actionMap.get("selectModeBicycle")); // NOI18N
        buttonGroup1.add(jToggleButton2);
        jToggleButton2.setIcon(resourceMap.getIcon("jToggleButton2.icon")); // NOI18N
        jToggleButton2.setName("jToggleButton2"); // NOI18N

        jToggleButton7.setAction(actionMap.get("selectModeCanoe")); // NOI18N
        buttonGroup1.add(jToggleButton7);
        jToggleButton7.setIcon(resourceMap.getIcon("jToggleButton7.icon")); // NOI18N
        jToggleButton7.setName("jToggleButton7"); // NOI18N

        jToggleButton8.setAction(actionMap.get("selectModeBoat")); // NOI18N
        buttonGroup1.add(jToggleButton8);
        jToggleButton8.setIcon(resourceMap.getIcon("jToggleButton8.icon")); // NOI18N
        jToggleButton8.setName("jToggleButton8"); // NOI18N

        jToggleButton10.setAction(actionMap.get("selectModeCar")); // NOI18N
        buttonGroup1.add(jToggleButton10);
        jToggleButton10.setIcon(resourceMap.getIcon("jToggleButton10.icon")); // NOI18N
        jToggleButton10.setName("jToggleButton10"); // NOI18N

        jToggleButton3.setAction(actionMap.get("selectModeParaglide")); // NOI18N
        buttonGroup1.add(jToggleButton3);
        jToggleButton3.setIcon(resourceMap.getIcon("jToggleButton3.icon")); // NOI18N
        jToggleButton3.setName("jToggleButton3"); // NOI18N

        jToggleButton9.setAction(actionMap.get("selectModeFly")); // NOI18N
        buttonGroup1.add(jToggleButton9);
        jToggleButton9.setIcon(resourceMap.getIcon("jToggleButton9.icon")); // NOI18N
        jToggleButton9.setName("jToggleButton9"); // NOI18N

        jToggleButton6.setAction(actionMap.get("selectModeSki")); // NOI18N
        buttonGroup1.add(jToggleButton6);
        jToggleButton6.setIcon(resourceMap.getIcon("jToggleButton6.icon")); // NOI18N
        jToggleButton6.setName("jToggleButton6"); // NOI18N

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator4.setName("jSeparator4"); // NOI18N

        jToggleButton4.setAction(actionMap.get("readElevationsFromDevice")); // NOI18N
        buttonGroup2.add(jToggleButton4);
        jToggleButton4.setIcon(resourceMap.getIcon("jToggleButton4.icon")); // NOI18N
        jToggleButton4.setName("jToggleButton4"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jToggleButton5.setAction(actionMap.get("readElevationsFromInternet")); // NOI18N
        buttonGroup2.add(jToggleButton5);
        jToggleButton5.setIcon(resourceMap.getIcon("jToggleButton5.icon")); // NOI18N
        jToggleButton5.setName("jToggleButton5"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jToggleButton7, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jToggleButton8, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jToggleButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jToggleButton3, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jToggleButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jToggleButton9, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jToggleButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToggleButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jToggleButton5)))
                        .addGap(229, 229, 229))
                    .addComponent(jLabel2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToggleButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(jToggleButton9))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jToggleButton1)
                                    .addComponent(jToggleButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jToggleButton7)
                                    .addComponent(jToggleButton8)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToggleButton10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(jToggleButton3))))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))))
                .addGap(11, 11, 11)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metóda určená na otvorenie súboru s gps údajmi kml
     */
    @Action
    public void openFile() {
        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.addChoosableFileFilter(new filefilters.KmlFilter());
        chooser.setMultiSelectionEnabled(false);
        chooser.setCurrentDirectory(new File(SettingsLoader.getInstance().getKmlRecentFolder()));
        int returnVal = chooser.showOpenDialog(chooser);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            disableAllGUIEntities();
            kmlFile = chooser.getSelectedFile();
            String strTemp = kmlFile.getAbsolutePath().substring(0, kmlFile.getAbsolutePath().lastIndexOf(System.getProperty("file.separator")));
            SettingsLoader.getInstance().setKmlRecentFolder(strTemp);
            SettingsLoader.getInstance().saveTempFile();
            readKml();
            if (kmlFile != null) {
                jTextField1.setText(kmlFile.getAbsolutePath());
                jTextField2.setEnabled(true);
                jButton2.setEnabled(true);
            }
        }

        if (returnVal == JFileChooser.CANCEL_OPTION) {
        }
    }

    /**
     * Metóda na špecifikovanie výstupného tlv súboru
     */
    @Action
    public void selectDest() {
        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setSelectedFile(new File(jTextField1.getText().substring(0, jTextField1.getText().indexOf(".kml")) + ".tlv"));
        chooser.addChoosableFileFilter(new filefilters.TlvFilter());
        int returnVal = chooser.showSaveDialog(chooser);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            destFolder = chooser.getSelectedFile();
            if (destFolder != null) {
                jTextField2.setText(destFolder.getAbsolutePath());
                jToggleButton1.setEnabled(true);
                jToggleButton2.setEnabled(true);
                jToggleButton3.setEnabled(true);
                jToggleButton6.setEnabled(true);
                jToggleButton7.setEnabled(true);
                jToggleButton8.setEnabled(true);
                jToggleButton9.setEnabled(true);
                jToggleButton10.setEnabled(true);
            }
        }
        if (returnVal == JFileChooser.CANCEL_OPTION) {
        }
    }

    /**
     * Metóda určená na zrušenie operácií a celého okna parsera
     */
    @Action
    public void Cancel() {
        if (thread1.isAlive()) {
            thread1.stop();
        }
        this.dispose();
    }

    /**
     * Metóda určená na načítanie vstupného súboru formátu .kml, a výber GPS informácií
     */
    public void readKml() {
        latitude.clear();
        longitude.clear();
        deviceElevation.clear();

        serverElevation = null;
        buttonGroup2.clearSelection();
        buttonGroup1.clearSelection();

        FileReader FR = null;
        try {
            FR = new FileReader(kmlFile);
            BufferedReader BR = new BufferedReader(FR);
            String str = "start";
            while (!"<coordinates>".equals(str)) {
                try {
                    str = BR.readLine().trim();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error: Cannot read file " + kmlFile.getName() + " !!!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.Cancel();
                }
            }
            do {
                str = BR.readLine().trim();
                if (!str.equalsIgnoreCase("</coordinates>")) {
                    String fff[] = str.split(",");
                    longitude.add(fff[0]);
                    latitude.add(fff[1]);
                    deviceElevation.add(fff[2]);
                }
            } while (!"</coordinates>".equals(str));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error: Cannot read file " + kmlFile.getName() + " !!!", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                FR.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error: Cannot read file " + kmlFile.getName() + " !!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * Metóda určená na vygenerovanie vystupného súboru formátu .tlv
     */
    @Action
    public void parseKml() {
        if (kmlFile != null && destFolder != null) {
            if (destFolder.getAbsolutePath().toLowerCase().endsWith(".tlv")) {
                path = destFolder.getAbsolutePath();
            }
            if (!destFolder.getAbsolutePath().toLowerCase().endsWith(".tlv")) {
                path = destFolder.getAbsolutePath() + ".tlv";
            }

            File f = new File(path);

            if (f.exists()) {
                try {
                    f.delete();
                    f.createNewFile();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error: Cannot create *.tlv file!!!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.Cancel();
                }
            }

            if (!f.exists()) {
                try {
                    f.createNewFile();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error: Cannot create *.tlv file!!!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.Cancel();
                }
            }
            try {


                DocumentBuilderFactory DBF = DocumentBuilderFactory.newInstance();
                DocumentBuilder DB = DBF.newDocumentBuilder();
                org.w3c.dom.Document document = DB.newDocument();
                org.w3c.dom.Element rootElement = document.createElement("TLV");
                document.appendChild(rootElement);
                org.w3c.dom.Element rootElement3 = document.createElement("SYSTEM");
                rootElement3.appendChild(document.createTextNode(os));
                rootElement.appendChild(rootElement3);
                org.w3c.dom.Element rootElement2 = document.createElement("FILES");
                rootElement2.appendChild(document.createTextNode("null"));
                rootElement.appendChild(rootElement2);
                org.w3c.dom.Element rootElement1 = document.createElement("COORDINATES");
                rootElement.appendChild(rootElement1);

                org.w3c.dom.Element element2 = document.createElement("Track_Type");
                element2.appendChild(document.createTextNode(trackType));
                rootElement1.appendChild(element2);

                org.w3c.dom.Element element3 = document.createElement("Elevations_type");
                if (isLoadedElevationsFromServer == true) {
                    element3.appendChild(document.createTextNode("INTERNET"));
                } else {
                    element3.appendChild(document.createTextNode("DEVICE"));
                }
                rootElement1.appendChild(element3);

                for (int i = 0; i < latitude.size(); i++) {
                    org.w3c.dom.Element em = document.createElement("TrackPoint");
                    rootElement1.appendChild(em);
                    org.w3c.dom.Element em1 = document.createElement("Latitude");
                    em1.appendChild(document.createTextNode(latitude.get(i)));
                    em.appendChild(em1);

                    org.w3c.dom.Element em2 = document.createElement("Longitude");
                    em2.appendChild(document.createTextNode(longitude.get(i)));
                    em.appendChild(em2);

                    org.w3c.dom.Element em3 = document.createElement("Device_Elevation");
                    em3.appendChild(document.createTextNode(deviceElevation.get(i)));
                    em.appendChild(em3);

                    if (isLoadedElevationsFromServer == true) {
                        org.w3c.dom.Element em3aPol = document.createElement("Internet_Elevation");
                        em3aPol.appendChild(document.createTextNode(serverElevation.get(i)));
                        em.appendChild(em3aPol);
                    }

                    org.w3c.dom.Element em4 = document.createElement("Time");
                    em4.appendChild(document.createTextNode("null"));
                    em.appendChild(em4);
                }
                TransformerFactory TF = TransformerFactory.newInstance();
                Transformer T = TF.newTransformer();
                DOMSource source = new DOMSource(document);
                StreamResult result = new StreamResult(f);
                T.transform(source, result);
                JOptionPane.showMessageDialog(this, "Info: File " + kmlFile.getName() + " was successfully parsed!!!", "Successfully done", JOptionPane.INFORMATION_MESSAGE);
                this.Cancel();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error: Cannot create *.tlv file!!!", "Error", JOptionPane.ERROR_MESSAGE);
                this.Cancel();
            }

        }

    }

    /**
     * Výber metódy kráčania
     */
    @Action
    public void selectModeWalk() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Walk";

    }

    /**
     * Výber metódy dopravného prostriedku Bicykel
     */
    @Action
    public void selectModeBicycle() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Bicycle";

    }

    /**
     * Výber metódy  dopravného prostriedku Auto
     */
    @Action
    public void selectModeCar() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Car";

    }

    /**
     * Výber metódy lyžovania sa
     */
    @Action
    public void selectModeSki() {
        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Ski";
    }

    /**
     * Výber metódy dopravného prostriedku Kanoe
     */
    @Action
    public void selectModeCanoe() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Canoe";

    }

    /**
     * Výber metódy dopravného prostriedku Loď
     */
    @Action
    public void selectModeBoat() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Boat";

    }

    /**
     * Výber metódy dopravného prostriedku Paraglide (Padák)
     */
    @Action
    public void selectModeParaglide() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Paraglide";

    }

    /**
     * Výber metódy dopravného prostriedku Lietadlo
     */
    @Action
    public void selectModeFly() {

        jToggleButton4.setEnabled(true);
        jToggleButton5.setEnabled(true);
        trackType = "Airplane";
    }

    /**
     * Metóda určená na načítavanie nadmorských výsok z mapového servera
     */
    @Action
    public void readElevationsFromInternet() {
        if (thread1.isAlive()) {

            thread1.stop();

        }

        jButton4.setEnabled(false);
        this.setCursor(Cursor.WAIT_CURSOR);

        jProgressBar1.setVisible(true);
        jProgressBar1.setStringPainted(true);
        jLabel6.setText("Loading elevations from server... ");
        jLabel6.setVisible(true);

        thread1 = new Thread(new getElevationsFromURL());
        thread1.start();

        this.setCursor(Cursor.DEFAULT_CURSOR);
    }

    /**
     * Metóda určená na načítavanie nadmorských výšok z GPS zariadenia
     */
    @Action
    public void readElevationsFromDevice() {

        if (thread1.isAlive()) {
            thread1.stop();
            jProgressBar1.setVisible(false);
            jLabel6.setVisible(false);
            serverElevation = null;
        }

        isLoadedElevationsFromServer = false;
        jButton4.setEnabled(true);
    }

    /**
     * Metóda určená na zablokovanie jednoltlivých prvkov GUI
     */
    public void disableAllGUIEntities() {

        isLoadedElevationsFromServer = false;

        jProgressBar1.setVisible(false);
        jLabel6.setVisible(false);
        jButton2.setEnabled(false);
        jButton4.setEnabled(false);

        jTextField2.setEnabled(false);
        jTextField2.setText("Select destination file ...");

        jToggleButton1.setEnabled(false);
        jToggleButton1.setSelected(false);

        jToggleButton2.setEnabled(false);
        jToggleButton2.setSelected(false);

        jToggleButton3.setEnabled(false);
        jToggleButton3.setSelected(false);

        jToggleButton4.setEnabled(false);
        jToggleButton4.setSelected(false);

        jToggleButton5.setEnabled(false);
        jToggleButton5.setSelected(false);

        jToggleButton6.setEnabled(false);
        jToggleButton6.setSelected(false);

        jToggleButton7.setEnabled(false);
        jToggleButton7.setSelected(false);

        jToggleButton8.setEnabled(false);
        jToggleButton8.setSelected(false);

        jToggleButton9.setEnabled(false);
        jToggleButton9.setSelected(false);

        jToggleButton10.setEnabled(false);
        jToggleButton10.setSelected(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public static final javax.swing.JProgressBar jProgressBar1 = new javax.swing.JProgressBar();
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton10;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables

    class getElevationsFromURL implements Runnable {

        public void run() {
            serverElevation = elevationLoader.reclaimElevations(latitude, longitude);

            jButton4.setEnabled(true);
            isLoadedElevationsFromServer = true;

            jLabel6.setText("Finished");
        }
    }
}
